{"version":3,"sources":["Components/List/Badge/Badge.jsx","images/remove.svg","Components/List/List.jsx","images/plus.svg","images/close.svg","Components/AddListButton/AddButtonList.jsx","images/edit.svg","images/add.svg","Components/Tasks/AddTaskForm.jsx","Components/Tasks/Task/Task.jsx","Components/Tasks/Tasks.jsx","images/list.svg","App.js","index.js"],"names":["Badge","color","onClick","className","classNames","List","items","isRemovable","onRemove","onClickItem","activeItem","map","item","index","active","id","icon","name","tasks","length","src","removeSvg","alt","window","confirm","axios","delete","then","removeList","AddButtonList","colors","onAdd","useState","visiblePopup","setVisiblePopup","selectedColor","selectColor","inputValue","setIputValue","isLoading","setIsLoading","useEffect","Array","isArray","onClose","addImg","width","height","closeSvg","value","onChange","e","target","type","placeholder","post","colorId","data","filter","c","listObj","task","finally","alert","AddTaskForm","lists","onAddTask","visibleForm","setFormVisible","setInputValue","toggleFormVisible","disabled","obj","listId","text","completed","catch","addSvg","Tasks","onEdit","onCompleted","checked","htmlFor","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","readOnly","editSvg","onCompletedTask","onEditTitle","withoutEmpty","onRemoveTask","onEditTask","style","textDecoration","to","hex","newTitle","prompt","patch","Task","App","setLists","setColors","setActiveItem","history","useHistory","get","onEditListTitle","title","newList","taskObj","taskId","newTaskText","list","location","pathname","split","find","Number","push","listImg","newLists","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e43f9a74.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './Badge.scss';\r\n//`badge badge--${color} ${className}`\r\nconst Badge = ({ color, onClick, className }) => (\r\n<i onClick={onClick} \r\n className={classNames('badge', { [`badge--${color}`]: color }, className)}></i>)\r\n\r\n\r\nexport default Badge;","export default __webpack_public_path__ + \"static/media/remove.f5660af3.svg\";","import React from 'react';\r\nimport Badge from './Badge/Badge';\r\nimport removeSvg from '../../images/remove.svg';\r\nimport './List.scss';\r\nimport axios from 'axios';\r\nimport classNames from 'classnames'\r\nconst List = ({ items, onClick, isRemovable, onRemove, onClickItem, activeItem }) => {\r\n  const removeList = (item) => {\r\n    if(window.confirm('Вы действительно хотите удалить список?')){\r\n      axios.delete('http://localhost:3001/lists/' + item.id)\r\n      .then(() => {\r\n        onRemove(item.id);\r\n      })\r\n    }\r\n  \r\n  }\r\n  return <ul onClick={onClick} className=\"list\">\r\n    { items.map((item, index )=> (\r\n        <li key={index} onClick={onClickItem ? () => onClickItem(item) :null}\r\n         className={classNames(item.className, {\r\n           active: activeItem && activeItem.id === item.id\r\n         })}>\r\n          <i>\r\n            {item.icon ? (item.icon) : (<Badge color={item.color.name} />)}\r\n\r\n          </i>\r\n          <span>\r\n            {item.name}\r\n            {item.tasks && item.tasks.length > 0 && ` (${item.tasks.length})`}\r\n          </span>\r\n        { isRemovable && \r\n        <img  src={removeSvg} alt={'Remove icon'} \r\n        className='list__removeSvg' onClick={() => removeList(item)}/>}\r\n        </li>\r\n      ))\r\n    }\r\n\r\n  </ul>\r\n}\r\n\r\nexport default List;","export default __webpack_public_path__ + \"static/media/plus.89fe7bf6.svg\";","export default __webpack_public_path__ + \"static/media/close.b83c2023.svg\";","import React, { Fragment, useEffect, useState } from 'react';\r\nimport './AddButtonList.scss';\r\nimport addImg from '../../images/plus.svg';\r\nimport List from '../List/List';\r\nimport Badge from '../List/Badge/Badge';\r\nimport closeSvg from '../../images/close.svg';\r\nimport axios from 'axios';\r\n\r\nconst AddButtonList = ({ colors, onAdd }) => {\r\n    const [visiblePopup, setVisiblePopup] = useState(false);\r\n    const [selectedColor, selectColor] = useState(3);\r\n    const [inputValue, setIputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(Array.isArray(colors)) {\r\n            selectColor(colors[0].id)\r\n        }\r\n\r\n    }, [colors])\r\n    \r\n    const onClose = () => {\r\n        setVisiblePopup(false);\r\n        setIputValue('');\r\n        selectColor(colors[0].id);\r\n    }\r\n    const addList = () => {\r\n        if (!inputValue) {\r\n            alert('Введите значение');\r\n            return;\r\n        }\r\n        setIsLoading(true)\r\n      axios\r\n      .post('http://localhost:3001/lists', {name:inputValue,\r\n    colorId: selectedColor})\r\n    .then(({data}) => {\r\n        const color = colors.filter(c => c.id === selectedColor)[0];\r\n        const listObj = {...data, color, task: []};\r\n        onAdd(listObj)\r\n        onClose()\r\n    }).finally(() => {\r\n        setIsLoading(false)\r\n    })\r\n       \r\n    }\r\n    return <Fragment>\r\n        <List\r\n            onClick={() => setVisiblePopup(true)}\r\n\r\n            items={[{\r\n                icon: (<img src={addImg} alt='List icon' width='10px' height='10px' />),\r\n                name: 'Добавить список',\r\n                active: false,\r\n            },]}\r\n            className='addList' />\r\n        {visiblePopup && <div className='addListPopup'>\r\n\r\n            <img onClick={onClose} src={closeSvg} className=\"addListPopup__closeBtn\"></img>\r\n\r\n            <input value={inputValue} onChange={e => setIputValue(e.target.value)} className='field' type='text' placeholder='Название списка' />\r\n            <div className='addListPopup__colors'>\r\n                {colors.map(color =>\r\n(                    <Badge onClick={() => selectColor(color.id)}\r\n                        key={color.id}\r\n                        color={color.name}\r\n                        className={selectedColor === color.id && 'active'} />))}\r\n            </div>\r\n            <button onClick={addList} className='button'>{isLoading ?'...Добавление' :'Добавить'}</button>\r\n        </div>}\r\n    </Fragment>\r\n}\r\n\r\n\r\nexport default AddButtonList;","export default __webpack_public_path__ + \"static/media/edit.1bda04de.svg\";","export default __webpack_public_path__ + \"static/media/add.c4fa83e1.svg\";","\r\nimport React, { useState } from 'react';\r\nimport './Tasks.scss';\r\nimport addSvg from '../../images/add.svg'\r\nimport axios from 'axios';\r\n\r\n\r\nconst AddTaskForm = ({ lists, onAddTask }) => {\r\n    const [visibleForm, setFormVisible] = useState(false);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const toggleFormVisible = () => {\r\n        setFormVisible(!visibleForm)\r\n        setInputValue('')\r\n    }\r\n    const addTask = () => {\r\n        setIsLoading(true);\r\n        const obj = {\r\n            listId: lists.id,\r\n            text: inputValue,\r\n            completed: false\r\n        }\r\n        axios.post('http://localhost:3001/tasks', obj).then(({ data }) => {\r\n            onAddTask(lists.id, data);\r\n            toggleFormVisible()\r\n        })\r\n        .catch(() => {alert('Ошибка при добавлении списка')})\r\n        .finally(() => { setIsLoading(false);})\r\n       \r\n    }\r\n    return (\r\n        <div className=\"tasks__form\">\r\n            {!visibleForm ? (<div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n                <img src={addSvg} alt='add' />\r\n                <span>Новая задача</span>\r\n            </div>\r\n\r\n            ) : (<div className=\"tasks__form-block\">\r\n                <input className='field'   \r\n                onChange={e => setInputValue(e.target.value)}  \r\n                       value={inputValue}\r\n                       type='text'\r\n                       placeholder='Текст задачи' />\r\n                <button disabled={isLoading}  onClick={addTask} className='button'>\r\n                    {isLoading ? '...Добавление' : 'Добавить'}\r\n                    </button>\r\n                <button onClick={toggleFormVisible} className='button button--grey'>Отмена</button>\r\n            </div>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddTaskForm;","import React from 'react';\r\nimport '../Tasks.scss';\r\nimport editSvg from '../../../images/edit.svg';\r\nimport removeSvg from '../../../images/remove.svg'\r\n\r\n\r\n\r\nconst Tasks = ({ onRemove, onEdit, lists, id, text, onCompleted, completed }) => {\r\nconst onChangeCheckbox = (e) => {\r\nonCompleted(lists.id, id, e.target.checked)\r\n}\r\n    return <div className='tasks__items-row' >\r\n        <div className='checkbox' >\r\n            <input \r\n            checked={completed}\r\n            onChange={onChangeCheckbox} \r\n            id={`task-${id}`}\r\n             type='checkbox' />\r\n            <label htmlFor={`task-${id}`} >\r\n                <svg width=\"11\" height=\"8\"\r\n                    viewBox=\"0 0 11 8\" fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path d=\"M9.29999 1.20001L3.79999 6.70001L1.29999 4.20001\"\r\n                        stroke=\"black\" strokeWidth=\"1.5\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\" />\r\n                </svg>\r\n            </label>\r\n        </div>\r\n        <input readOnly value={text} />\r\n        <div className=\"tasks__items-row-actions\">\r\n            <div onClick={() => onEdit(lists.id, {id, text})}>\r\n                <img src={editSvg} alt='edit text' />\r\n            </div>\r\n            <div onClick={() => onRemove(lists.id, id)}>\r\n                <img src={removeSvg} alt='remove text' />\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Tasks;","\r\nimport React, { useState } from 'react';\r\nimport './Tasks.scss';\r\nimport editSvg from '../../images/edit.svg'\r\nimport axios from 'axios';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport { Link } from 'react-router-dom';\r\nimport Task from './Task/Task';\r\n\r\nconst Tasks = ({ onCompletedTask, lists, onEditTitle, onAddTask, withoutEmpty, onRemoveTask, onEditTask }) => {\r\n\r\n    const EditTitle = () => {\r\n        const newTitle = window.prompt('Название списка', lists.name);\r\n        if (newTitle) {\r\n            onEditTitle(lists.id, newTitle);\r\n            axios.patch('http://localhost:3001/lists/' + lists.id, {\r\n                name: newTitle\r\n            }).catch(() => {\r\n                alert('Неудалось изменение из-за возниковения ошибки')\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    return <div className='tasks'>\r\n        <Link style={{ textDecoration: 'none' }} to={`/lists/${lists.id}`}>\r\n            <h2 style={{ color: lists.color.hex }} className='tasks__title'>\r\n                {lists.name}\r\n                <img onClick={EditTitle} src={editSvg} alt='Edit icon' />\r\n            </h2>\r\n        </Link>\r\n\r\n        <div className='tasks__items'>\r\n            {!withoutEmpty && lists.tasks && !lists.tasks.length && <h2>Задачи отсутсвуют</h2>}\r\n            {lists.tasks &&\r\n                lists.tasks.map(task =>\r\n                    <Task\r\n                        onCompleted={onCompletedTask}\r\n                        lists={lists}\r\n                        onRemove={onRemoveTask}\r\n                        onEdit={onEditTask}\r\n                        key={task.id} \r\n                        {...task} />)}\r\n            <AddTaskForm \r\n            key={lists.id} \r\n            onAddTask={onAddTask} \r\n            lists={lists} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Tasks;","export default __webpack_public_path__ + \"static/media/list.fbd75cad.svg\";","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\n\nimport './App.scss';\nimport List from './Components/List/List.jsx'\nimport AddButtonList from './Components/AddListButton/AddButtonList';\nimport Tasks from './Components/Tasks/Tasks';\nimport listImg from './images/list.svg';\nimport { Route, useHistory } from 'react-router-dom';\n\n\nfunction App() {\n  const [lists, setLists] = useState(null);\n  const [colors, setColors] = useState(null);\n  const [activeItem, setActiveItem] = useState(null);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    axios\n      .get('http://localhost:3001/lists?_expand=color&_embed=tasks')\n      .then(({ data }) => {\n        setLists(data);\n      });\n    axios.get('http://localhost:3001/colors').then(({ data }) => {\n      setColors(data);\n    });\n  }, []);\n\n\n\n  const onAddLists = obj => {\n    const newList = [...lists, obj];\n    setLists(newList);\n\n  };\n\n  const onEditListTitle = (id, title) => {\n    const newList = lists.map(item => {\n      if (item.id === id) {\n        item.name = title;\n      }\n      return item;\n    })\n    setLists(newList);\n  }\n  const onAddTask = (listId, taskObj) => {\n    const newList = lists.map(item => {\n      if (item.id === listId) {\n        item.tasks = [...item.tasks, taskObj];\n      }\n      return item;\n    })\n    setLists(newList);\n  }\n  const onRemoveTask = (listId, taskId) => {\n    if (window.confirm('Вы действительно хотите удалить задачу')) {\n      const newList = lists.map(item => {\n        if (item.id === listId) {\n          item.tasks = item.tasks.filter(task => task.id !== taskId)\n        }\n        return item;\n      });\n      setLists(newList);\n      axios.delete('http://localhost:3001/tasks/' + taskId)\n        .catch(() => {\n          alert('Не удалось удалить задачу')\n        })\n    }\n  };\n\n  const onEditTask = (listId, taskObj) => {\n    const newTaskText = window.prompt('Текст Задачи', taskObj.text);\n    if (!newTaskText) {\n      return;\n    }\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskObj.id) {\n            task.text = newTaskText;\n          }\n          return task;\n        })\n      }\n      return list;\n    });\n    setLists(newList);\n    axios.patch('http://localhost:3001/tasks/' + taskObj.id, {\n      text: newTaskText\n    })\n      .catch(() => {\n        alert('Не удалось изменить задачу')\n      })\n  };\n  const onCompletedTask = (listId, taskId, completed) => {\n    const newList = lists.map(list => {\n      if (list.id === listId) {\n        list.tasks = list.tasks.map(task => {\n          if (task.id === taskId) {\n            task.completed = completed;\n          }\n          return task;\n        })\n      }\n      return list;\n    });\n    setLists(newList);\n\n    axios.patch('http://localhost:3001/tasks/' + taskId, {\n      completed\n    })\n      .catch(() => {\n        alert('Не удалось отметить что задача выполнена')\n      })\n  }\n\n  useEffect(() => {\n    const listId = history.location.pathname.split('lists/')[1];\n    if (lists) {\n      const list = lists.find(list => list.id === Number(listId));\n      setActiveItem(list);\n    }\n    \n  }, [lists, history.location.pathname]);\n\n  return (\n    <div className='todo'>\n      <div className='sidebar'>\n        <List\n          onClickItem={list => {\n            history.push(`/`);\n           \n          }}\n          items={[{\n            active: history.location.pathname === '/',\n            icon: (<img src={listImg} alt='List icon' width='18px' height='18px' />),\n            name: 'Все задачи',\n          },]} />\n\n        {lists\n          ? (<List\n            items={lists}\n            isRemovable\n            onRemove={id => {\n              const newLists = lists.filter(item => item.id !== id);\n              setLists(newLists);\n            }}\n\n            onClickItem={list => {\n              history.push(`/lists/${list.id}`);\n            setActiveItem(list)\n            }}\n\n            activeItem={activeItem}\n          />)\n          : '...Загрузка'}\n\n        <AddButtonList onAdd={onAddLists} colors={colors} />\n      </div>\n\n      <div className='todo__tasks'>\n        <Route exact path=\"/\">\n          {lists &&\n            lists.map(lists => (\n              <Tasks\n                onCompletedTask={onCompletedTask}\n                onRemoveTask={onRemoveTask}\n                onEditTask={onEditTask}\n                key={lists.id}\n                lists={lists}\n                onAddTask={onAddTask}\n                onEditTitle={onEditListTitle}\n                withoutEmpty />\n            ))}\n        </Route>\n        <Route path='/lists/:id'>\n          {lists && activeItem &&\n            (<Tasks\n              onCompletedTask={onCompletedTask}\n              onEditTask={onEditTask}\n              onRemoveTask={onRemoveTask}\n              onAddTask={onAddTask}\n              onEditTitle={onEditListTitle}\n              lists={activeItem} />)}\n        </Route>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router>\n                     <App />\n               </Router>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}